rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Global room for dashboard chat
    match /rooms/{roomId}/messages/{msgId} {
      allow read, write: if request.auth != null;
    }

    match /projects/{projectId} {
      allow read: if canRead(projectId);
      allow create: if request.auth != null
                    && request.resource.data.members is list
                    && request.resource.data.memberEmails is list;

      allow update, delete: if isOwner(projectId);

      match /notes/{noteId} {
        allow read, write: if canRead(projectId);
      }

      match /messages/{msgId} {
        allow read, write: if canRead(projectId);
      }

      match /audit/{auditId} {
        allow read: if canRead(projectId);
        allow create: if canRead(projectId);
      }

      match /state/{docId} {
        allow read, write: if canRead(projectId);
      }
    }

    function isOwner(projectId) {
      return request.auth != null &&
        get(/databases/$(database)/documents/projects/$(projectId)).data.ownerUid == request.auth.uid;
    }

    // allow reading if you're a member by UID OR your signed-in email is invited
    function canRead(projectId) {
      return request.auth != null &&
        exists(/databases/$(database)/documents/projects/$(projectId)) &&
        (
          request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.members ||
          request.auth.token.email in get(/databases/$(database)/documents/projects/$(projectId)).data.memberEmails
        );
    }
  }
}
